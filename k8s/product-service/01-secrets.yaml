---
# Database Secrets
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: product-service
  labels:
    app: product-service
type: Opaque
data:
  # Values are base64 encoded
  # To encode: echo -n 'your-value' | base64
  # To decode: echo 'encoded-value' | base64 -d
  # Replace these placeholders with real values injected by your secret management solution.
  # Example: Use ExternalSecrets, SealedSecrets, or CI templating to populate these at deploy time.
  POSTGRES_USER: "<base64-POSTGRES_USER-PLACEHOLDER>"
  POSTGRES_PASSWORD: "<base64-POSTGRES_PASSWORD-PLACEHOLDER>"
  POSTGRES_DB: "<base64-POSTGRES_DB-PLACEHOLDER>"
  DATABASE_URL: "<base64-DATABASE_URL-PLACEHOLDER>"
---
# Application Secrets
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: product-service
  labels:
    app: product-service
type: Opaque
data:
  # Application secrets
  JWT_SECRET: "<base64-JWT_SECRET-PLACEHOLDER>"
  API_KEY: "<base64-API_KEY-PLACEHOLDER>"
  ENCRYPTION_KEY: "<base64-ENCRYPTION_KEY-PLACEHOLDER>"
---
# Redis Secrets (if needed)
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: product-service
  labels:
    app: product-service
type: Opaque
data:
  REDIS_PASSWORD: "<base64-REDIS_PASSWORD-PLACEHOLDER>"
---
# External API Secrets
# apiVersion: v1
# kind: Secret
# metadata:
#   name: external-api-secret
#   namespace: product-service
#   labels:
#     app: product-service
# type: Opaque
# data:
#   AWS_ACCESS_KEY_ID: QVVJQVBBTU1aSEVYQU1QTEU=        # AKIAEXAMPLEKEY
#   AWS_SECRET_ACCESS_KEY: d0phbHJYVXRuRkVNSS9LN01ERU5HL2VYQU1QTEVLRVK=  # wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY